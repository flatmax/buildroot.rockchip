Index: uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/make.sh
===================================================================
--- uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce.orig/make.sh
+++ uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/make.sh
@@ -11,9 +11,10 @@ SUPPORT_LIST=`ls configs/*[r,p][x,v,k][0
 CMD_ARGS=$1
 
 ########################################### User can modify #############################################
-RKBIN_TOOLS=../rkbin/tools
-CROSS_COMPILE_ARM32=../prebuilts/gcc/linux-x86/arm/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf-
-CROSS_COMPILE_ARM64=../prebuilts/gcc/linux-x86/aarch64/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-
+RKBIN_TOOLS=../../images/rkbin/tools
+CROSS_COMPILE_ARM32=
+#CROSS_COMPILE_ARM64=../prebuilts/gcc/linux-x86/aarch64/gcc-linaro-6.3.1-2017.05-x86_64_aarch64-linux-gnu/bin/aarch64-linux-gnu-
+CROSS_COMPILE_ARM64=../../host/bin/aarch64-linux-
 ########################################### User not touch #############################################
 # Declare global INI file searching index name for every chip, update in select_chip_info()
 RKCHIP=
@@ -98,7 +99,7 @@ function prepare()
 		absolute_path=$(cd `dirname ${RKBIN_TOOLS}`; pwd)
 		RKBIN=${absolute_path}
 	else
-		echo "ERROR: No ../rkbin repository"
+		echo "ERROR: No ../../images/rkbin repository"
 		exit 1
 	fi
 
@@ -259,7 +260,7 @@ function select_toolchain()
 			CROSS_COMPILE_ARM64=`cat ${CC_FILE}`
 		else
 			if grep -q '^CONFIG_ARM64=y' .config ; then
-				CROSS_COMPILE_ARM64=$(cd `dirname ${CROSS_COMPILE_ARM64}`; pwd)"/aarch64-linux-gnu-"
+				CROSS_COMPILE_ARM64=$(cd `dirname ${CROSS_COMPILE_ARM64}`; pwd)"/aarch64-linux-"
 			else
 				CROSS_COMPILE_ARM32=$(cd `dirname ${CROSS_COMPILE_ARM32}`; pwd)"/arm-linux-gnueabihf-"
 			fi
Index: uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/fit.sh
===================================================================
--- uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce.orig/scripts/fit.sh
+++ uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/fit.sh
@@ -27,7 +27,7 @@ KERNEL_ADDR_PLACEHOLDER="0xffffff01"
 RAMDISK_ADDR_PLACEHOLDER="0xffffff02"
 # tools
 MKIMAGE="./tools/mkimage"
-RK_SIGN_TOOL="../rkbin/tools/rk_sign_tool"
+RK_SIGN_TOOL="../../images/rkbin/tools/rk_sign_tool"
 FIT_UNPACK="./scripts/fit-unpack.sh"
 CHECK_SIGN="./tools/fit_check_sign"
 # key
@@ -298,7 +298,7 @@ function fit_gen_uboot_itb()
 			if [ "${ARG_SPL_NEW}" == "y" ]; then
 				 ${CHECK_SIGN} -f ${ITB_UBOOT} -k ${SPL_DTB} -s
 			else
-				spl_file="../rkbin/"`sed -n "/FlashBoot=/s/FlashBoot=//p" ${ARG_INI_LOADER}  |tr -d '\r'`
+				spl_file="../../images/rkbin/"`sed -n "/FlashBoot=/s/FlashBoot=//p" ${ARG_INI_LOADER}  |tr -d '\r'`
 				offs=`fdtdump -s ${spl_file} | head -1 | awk -F ":" '{ print $2 }' | sed "s/ found fdt at offset //g" | tr -d " "`
 				if [ -z ${offs}  ]; then
 					echo "ERROR: invalid ${spl_file} , unable to find fdt blob"
Index: uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/pack_resource.sh
===================================================================
--- uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce.orig/scripts/pack_resource.sh
+++ uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/pack_resource.sh
@@ -11,7 +11,7 @@ RSCE_NEW=resource.img
 BOOT_OLD=$1
 BOOT_NEW=boot.img
 
-TOOL=../rkbin/tools/resource_tool
+TOOL=../../images/rkbin/tools/resource_tool
 IMAGES=./tools/images/
 TMP_DIR=.resource_tmp
 TMP_DIR2=.boot_tmp
Index: uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/uboot.sh
===================================================================
--- uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce.orig/scripts/uboot.sh
+++ uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/uboot.sh
@@ -50,6 +50,6 @@ if [ ${BIN_KB} -gt ${MAX_KB} ]; then
 	exit 1
 fi
 
-../rkbin/tools/loaderimage --pack --uboot u-boot.bin uboot.img ${LOAD_ADDR} ${SIZE}
+../../images/rkbin/tools/loaderimage --pack --uboot u-boot.bin uboot.img ${LOAD_ADDR} ${SIZE}
 echo "pack uboot okay! Input: u-boot.bin"
 echo
Index: uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/unpack_resource.sh
===================================================================
--- uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce.orig/scripts/unpack_resource.sh
+++ uboot-cd33ad23135a97a8df0931d221b076f3bc6241ce/scripts/unpack_resource.sh
@@ -8,7 +8,7 @@
 
 IMAGE_FILE=$1
 OUTPUT_DIR=$2
-PACK_TOOL=../rkbin/tools/resource_tool
+PACK_TOOL=../../images/rkbin/tools/resource_tool
 
 usage()
 {
@@ -23,7 +23,7 @@ prepare()
 		usage
 		exit 0
 	elif [ ! -f "$PACK_TOOL" ];then
-		echo "Can't find '../rkbin/' Responsity, please download it before pack image!"
+		echo "Can't find '../../images/rkbin/' Responsity, please download it before pack image!"
 		echo "How to obtain? 3 ways:"
 		echo "	1. Login your Rockchip gerrit account: \"Projects\" -> \"List\" -> search \"rk/rkbin\" Responsity"
 		echo "	2. Github Responsity: https://github.com/rockchip-linux/rkbin"
