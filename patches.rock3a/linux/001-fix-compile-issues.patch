Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/rtw_mlme.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/rtw_mlme.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/rtw_mlme.c
@@ -140,7 +140,7 @@ sint	_rtw_init_mlme_priv(_adapter *padap
 #if defined(CONFIG_RTW_WNM) || defined(CONFIG_RTW_80211K)
 	rtw_roam_nb_info_init(padapter);
 	pmlmepriv->ch_cnt = 0;
-#endif	
+#endif
 #endif
 	rtw_init_mlme_timer(padapter);
 
@@ -699,8 +699,8 @@ int is_same_network(WLAN_BSSID_EX *src,
 		return _TRUE;
 #endif
 
-	/* Wi-Fi driver doesn't consider the situation of BCN and ProbRsp sent from the same hidden AP, 
-	  * it considers these two packets are sent from different AP. 
+	/* Wi-Fi driver doesn't consider the situation of BCN and ProbRsp sent from the same hidden AP,
+	  * it considers these two packets are sent from different AP.
 	  * Therefore, the scan queue may store two scan results of the same hidden AP, likes below.
 	  *
 	  *  index            bssid              ch    RSSI   SdBm  Noise   age          flag             ssid
@@ -713,11 +713,11 @@ int is_same_network(WLAN_BSSID_EX *src,
 	  * It means the scan queue will not store two scan results of the same hidden AP, it only store ProbRsp.
 	  * For customer request.
 	  */
-	  
+
 	if (((_rtw_memcmp(src->MacAddress, dst->MacAddress, ETH_ALEN)) == _TRUE) &&
 		((s_cap & WLAN_CAPABILITY_IBSS) == (d_cap & WLAN_CAPABILITY_IBSS)) &&
 		((s_cap & WLAN_CAPABILITY_BSS) == (d_cap & WLAN_CAPABILITY_BSS))) {
-		if ((src->Ssid.SsidLength == dst->Ssid.SsidLength) && 
+		if ((src->Ssid.SsidLength == dst->Ssid.SsidLength) &&
 			(((_rtw_memcmp(src->Ssid.Ssid, dst->Ssid.Ssid, src->Ssid.SsidLength)) == _TRUE) || //Case of normal AP
 			(is_all_null(src->Ssid.Ssid, src->Ssid.SsidLength) == _TRUE || is_all_null(dst->Ssid.Ssid, dst->Ssid.SsidLength) == _TRUE))) //Case of hidden AP
 			return _TRUE;
@@ -994,7 +994,7 @@ bool rtw_update_scanned_network(_adapter
 			plist = get_next(plist);
 			continue;
 		}
-			
+
 #ifdef CONFIG_RSSI_PRIORITY
 		if ((choice == NULL) || (pnetwork->network.PhyInfo.SignalStrength < choice->network.PhyInfo.SignalStrength))
 			#ifdef CONFIG_RTW_MESH
@@ -2603,10 +2603,10 @@ u8 rtw_ft_chk_roaming_candidate(
 	/*The candidate don't support over-the-DS*/
 	if (rtw_ft_valid_otd_candidate(padapter, pmdie)) {
 		RTW_INFO("FT: ignore the candidate("
-			MAC_FMT ") for over-the-DS\n", 
+			MAC_FMT ") for over-the-DS\n",
 			MAC_ARG(competitor->network.MacAddress));
 			rtw_ft_clr_flags(padapter, RTW_FT_PEER_OTD_EN);
-		return _FALSE;	
+		return _FALSE;
 	}
 
 	return _TRUE;
@@ -2682,7 +2682,7 @@ err_2:
 void rtw_roam_nb_info_init(_adapter *padapter)
 {
 	struct roam_nb_info *pnb = &(padapter->mlmepriv.nb_info);
-	
+
 	_rtw_memset(&pnb->nb_rpt, 0, sizeof(pnb->nb_rpt));
 	_rtw_memset(&pnb->nb_rpt_ch_list, 0, sizeof(pnb->nb_rpt_ch_list));
 	_rtw_memset(&pnb->roam_target_addr, 0, ETH_ALEN);
@@ -2692,8 +2692,8 @@ void rtw_roam_nb_info_init(_adapter *pad
 	pnb->nb_rpt_is_same = _TRUE;
 	pnb->last_nb_rpt_entries = 0;
 #ifdef CONFIG_RTW_WNM
-	rtw_init_timer(&pnb->roam_scan_timer, 
-		padapter, rtw_wnm_roam_scan_hdl, 
+	rtw_init_timer(&pnb->roam_scan_timer,
+		padapter, rtw_wnm_roam_scan_hdl,
 		padapter);
 #endif
 }
@@ -2721,7 +2721,7 @@ u8 rtw_roam_nb_scan_list_set(
 	rtw_init_sitesurvey_parm(padapter, pparm);
 	if (rtw_roam_busy_scan(padapter, pnb)) {
 		pparm->ch_num = 1;
-		pparm->ch[pmlmepriv->ch_cnt].hw_value = 
+		pparm->ch[pmlmepriv->ch_cnt].hw_value =
 			pnb->nb_rpt_ch_list[pmlmepriv->ch_cnt].hw_value;
 		pmlmepriv->ch_cnt++;
 		ret = _TRUE;
@@ -2740,7 +2740,7 @@ u8 rtw_roam_nb_scan_list_set(
 	}
 
 	pmlmepriv->nb_info.nb_rpt_valid = _FALSE;
-	pmlmepriv->ch_cnt = 0;		
+	pmlmepriv->ch_cnt = 0;
 	ret = _TRUE;
 
 set_bssid_list:
@@ -3070,7 +3070,7 @@ void rtw_scan_timeout_handler(void *ctx)
 void rtw_mlme_reset_auto_scan_int(_adapter *adapter, u8 *reason)
 {
 #if defined(CONFIG_RTW_MESH) && defined(CONFIG_DFS_MASTER)
-#if CONFIG_RTW_MESH_OFFCH_CAND 
+#if CONFIG_RTW_MESH_OFFCH_CAND
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
 #endif
 #endif
@@ -3122,11 +3122,14 @@ void rtw_drv_scan_by_self(_adapter *pada
 	ssc_chk = rtw_sitesurvey_condition_check(padapter, _FALSE);
 	if( ssc_chk == SS_DENY_BUSY_TRAFFIC) {
 		#ifdef CONFIG_LAYER2_ROAMING
-		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE) && pmlmepriv->need_to_roam == _TRUE)
+		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE) && pmlmepriv->need_to_roam == _TRUE) {
 			RTW_INFO(FUNC_ADPT_FMT" need to roam, don't care BusyTraffic\n", FUNC_ADPT_ARG(padapter));
-		else
+		} else {
 		#endif
 			RTW_INFO(FUNC_ADPT_FMT" exit BusyTraffic\n", FUNC_ADPT_ARG(padapter));
+		#ifdef CONFIG_LAYER2_ROAMING
+		}
+		#endif
 			goto exit;
 	}
 	else if (ssc_chk != SS_ALLOW)
@@ -3184,7 +3187,7 @@ void rtw_drv_scan_by_self(_adapter *pada
 	}
 
 #if defined(CONFIG_RTW_WNM) || defined(CONFIG_RTW_80211K)
-	if ((reason == RTW_AUTO_SCAN_REASON_ROAM) 
+	if ((reason == RTW_AUTO_SCAN_REASON_ROAM)
 		&& (rtw_roam_nb_scan_list_set(padapter, &parm)))
 		goto exit;
 #endif
@@ -3414,7 +3417,7 @@ static void collect_traffic_statistics(_
 	dynamic_napi_th_chk (padapter);
 #endif /* CONFIG_RTW_NAPI_DYNAMIC */
 #endif
-	
+
 }
 
 void rtw_dynamic_check_timer_handlder(void *ctx)
@@ -3548,10 +3551,10 @@ static int rtw_check_roaming_candidate(s
 		goto exit;
 
 #if defined(CONFIG_RTW_80211R) && defined(CONFIG_RTW_WNM)
-	if (rtw_wnm_btm_diff_bss(adapter) && 
+	if (rtw_wnm_btm_diff_bss(adapter) &&
 		rtw_wnm_btm_roam_candidate(adapter, competitor)) {
 		goto update;
-	}	
+	}
 #endif
 
 	if (competitor->network.Rssi - mlme->cur_network_scanned->network.Rssi < mlme->roam_rssi_diff_th)
@@ -3995,9 +3998,9 @@ exit:
 /*
  * rtw_uapsd_use_default_setting
  * This function is used for setting default uapsd max sp length to uapsd_max_sp_len
- * in qos_priv data structure from registry. In additional, it will also map default uapsd 
- * ac to each uapsd TID, delivery-enabled and trigger-enabled of corresponding TID. 
- * 
+ * in qos_priv data structure from registry. In additional, it will also map default uapsd
+ * ac to each uapsd TID, delivery-enabled and trigger-enabled of corresponding TID.
+ *
  * Arguments:
  * @padapter: _adapter pointer.
  *
@@ -4012,7 +4015,7 @@ void	rtw_uapsd_use_default_setting(_adap
 
 	if (pregistrypriv->uapsd_ac_enable != 0) {
 		pqospriv->uapsd_max_sp_len = pregistrypriv->uapsd_max_sp_len;
-		
+
 		CLEAR_FLAGS(pqospriv->uapsd_tid);
 		CLEAR_FLAGS(pqospriv->uapsd_tid_delivery_enabled);
 		CLEAR_FLAGS(pqospriv->uapsd_tid_trigger_enabled);
@@ -4028,7 +4031,7 @@ void	rtw_uapsd_use_default_setting(_adap
 		}
 
 		/* check the uapsd setting of AC_VI from registry then map these setting to each TID if necessary  */
-		if(TEST_FLAG(pregistrypriv->uapsd_ac_enable, DRV_CFG_UAPSD_VI)) {	
+		if(TEST_FLAG(pregistrypriv->uapsd_ac_enable, DRV_CFG_UAPSD_VI)) {
 			SET_FLAG(pqospriv->uapsd_tid, WMM_TID5);
 			SET_FLAG(pqospriv->uapsd_tid_delivery_enabled, WMM_TID5);
 			SET_FLAG(pqospriv->uapsd_tid_trigger_enabled, WMM_TID5);
@@ -4057,7 +4060,7 @@ void	rtw_uapsd_use_default_setting(_adap
 			SET_FLAG(pqospriv->uapsd_tid_trigger_enabled, WMM_TID0);
 		}
 
-		RTW_INFO("[WMMPS] UAPSD MAX SP Len = 0x%02x, UAPSD TID enabled = 0x%02x\n", 
+		RTW_INFO("[WMMPS] UAPSD MAX SP Len = 0x%02x, UAPSD TID enabled = 0x%02x\n",
 			pqospriv->uapsd_max_sp_len, (u8)pqospriv->uapsd_tid);
 	}
 
@@ -4067,18 +4070,18 @@ void	rtw_uapsd_use_default_setting(_adap
  * rtw_is_wmmps_mode
  * This function is used for checking whether Driver and an AP support uapsd function or not.
  * If both of them support uapsd function, it will return true. Otherwise returns false.
- * 
+ *
  * Arguments:
  * @padapter: _adapter pointer.
  *
  * Auther: Arvin Liu
  * Date: 2017/06/12
  */
-bool rtw_is_wmmps_mode(_adapter *padapter) 
+bool rtw_is_wmmps_mode(_adapter *padapter)
 {
 	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
 	struct qos_priv	*pqospriv = &pmlmepriv->qospriv;
-		
+
 	if ((pqospriv->uapsd_ap_supported) && ((pqospriv->uapsd_tid & BIT_MASK_TID_TC)  != 0))
 		return _TRUE;
 
@@ -4121,16 +4124,16 @@ int rtw_restruct_wmm_ie(_adapter *adapte
 
 #ifdef CONFIG_WMMPS_STA
 			switch(pqospriv->uapsd_max_sp_len) {
-				case NO_LIMIT: 
+				case NO_LIMIT:
 					/* do nothing */
 					break;
-				case TWO_MSDU: 
+				case TWO_MSDU:
 					SET_FLAG(qos_info, BIT5);
 					break;
-				case FOUR_MSDU: 
+				case FOUR_MSDU:
 					SET_FLAG(qos_info, BIT6);
-					break;	
-				case SIX_MSDU: 
+					break;
+				case SIX_MSDU:
 					SET_FLAG(qos_info, BIT5);
 					SET_FLAG(qos_info, BIT6);
 					break;
@@ -4152,7 +4155,7 @@ int rtw_restruct_wmm_ie(_adapter *adapte
 			if((TEST_FLAG(pqospriv->uapsd_tid, WMM_TID3)) && (TEST_FLAG(pqospriv->uapsd_tid, WMM_TID0)))
 				SET_FLAG(qos_info, WMM_IE_UAPSD_BE);
 #endif /* CONFIG_WMMPS_STA */
-			
+
 			out_ie[initial_out_len + 8] = qos_info;
 
 			break;
@@ -4263,7 +4266,7 @@ int rtw_rsn_sync_pmkid(_adapter *adapter
 		+ 2 + 16 * info.pmkid_cnt
 		+ (info.gmcs ? 4 : 0)
 		;
-	
+
 	ie[1] = (u8)(ie_len - 2);
 
 exit:
@@ -4796,7 +4799,7 @@ void rtw_update_ht_cap(_adapter *padapte
 			phtpriv->ampdu_enable = _TRUE;
 		} else
 			phtpriv->ampdu_enable = _TRUE;
-	} 
+	}
 
 
 	/* check Max Rx A-MPDU Size */
@@ -5246,4 +5249,3 @@ void dump_arp_pkt(void *sel, u8 *da, u8
 	RTW_PRINT_SEL(sel, "tha="MAC_FMT", tpa="IP_FMT"\n"
 		, MAC_ARG(ARP_TARGET_MAC_ADDR(arp)), IP_ARG(ARP_TARGET_IP_ADDR(arp)));
 }
-
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/rtw_recv.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/rtw_recv.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/rtw_recv.c
@@ -3544,10 +3544,11 @@ int validate_mp_recv_frame(_adapter *ada
 			int i;
 			RTW_INFO("############ type:0x%02x subtype:0x%02x #################\n", type, subtype);
 
-			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8)
+			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8){
 				RTW_INFO("%02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X:\n", *(ptr + i),
 					*(ptr + i + 1), *(ptr + i + 2) , *(ptr + i + 3) , *(ptr + i + 4), *(ptr + i + 5), *(ptr + i + 6), *(ptr + i + 7));
-				RTW_INFO("#############################\n");
+			}
+			RTW_INFO("#############################\n");
 				_rtw_memset(pmppriv->mplink_buf, '\0' , sizeof(pmppriv->mplink_buf));
 				_rtw_memcpy(pmppriv->mplink_buf, ptr, precv_frame->u.hdr.len);
 				pmppriv->mplink_rx_len = precv_frame->u.hdr.len;
@@ -4737,7 +4738,7 @@ void rx_query_phy_status(
 						precvframe->u.hdr.psta = psta;
 					rx_process_phy_info(padapter, precvframe);
 				}
-			} else 
+			} else
 #endif
 			{
 					if (psta)
@@ -4940,4 +4941,3 @@ void dump_rx_bh_tk(void *sel, struct rec
 	);
 }
 #endif /* DBG_RX_BH_TRACKING */
-
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/efuse/rtw_efuse.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/efuse/rtw_efuse.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188eu/core/efuse/rtw_efuse.c
@@ -815,8 +815,9 @@ void rtw_efuse_analyze(PADAPTER	padapter
 	j = 0;
 
 	for (i = 0; i < mapLen; i++) {
-		if (i % 16 == 0)
+		if (i % 16 == 0){
 			RTW_PRINT_SEL(RTW_DBGDUMP, "0x%03x: ", i);
+		}
 			_RTW_PRINT_SEL(RTW_DBGDUMP, "%02X%s"
 				, pEfuseHal->fakeEfuseInitMap[i]
 				, ((i + 1) % 16 == 0) ? "\n" : (((i + 1) % 8 == 0) ? "	  " : " ")
@@ -968,7 +969,7 @@ void EFUSE_GetEfuseDefinition(PADAPTER a
 			*(u16 *)out = (u16)v32;
 			return;
 
-		case TYPE_EFUSE_REAL_CONTENT_LEN:	
+		case TYPE_EFUSE_REAL_CONTENT_LEN:
 			rtw_halmac_get_physical_efuse_size(d, &v32);
 			*(u16 *)out = (u16)v32;
 			return;
@@ -1074,7 +1075,7 @@ u8 rtw_efuse_bt_access(PADAPTER adapter,
 
 		if (efuse) {
 			err = rtw_halmac_read_bt_physical_efuse_map(d, efuse, size);
-			
+
 			if (err == -1) {
 				RTW_ERR("%s: rtw_halmac_read_bt_physical_efuse_map fail!\n", __FUNCTION__);
 				rtw_mfree(efuse, size);
@@ -1348,7 +1349,7 @@ void hal_ReadEFuse_BT_logic_map(
 
 	if (rtw_efuse_bt_access(padapter, _FALSE, 0, EFUSE_BT_REAL_CONTENT_LEN, phyefuse))
 		dump_buf(phyefuse, EFUSE_BT_REAL_BANK_CONTENT_LEN);
-	
+
 	total = BANK_NUM;
 	for (bank = 1; bank <= total; bank++) { /* 8723d Max bake 0~2 */
 		eFuse_Addr = 0;
@@ -1511,7 +1512,7 @@ static u8 hal_EfusePgPacketWrite2ByteHea
 	/*	RTW_INFO("%s: pg_header=0x%x\n", __FUNCTION__, pg_header); */
 
 	do {
-		
+
 		rtw_efuse_bt_access(padapter, _TRUE, efuse_addr, 1, &pg_header);
 		rtw_efuse_bt_access(padapter, _FALSE, efuse_addr, 1, &tmp_header);
 
@@ -1719,7 +1720,7 @@ u8 efuse_OneByteRead(struct _ADAPTER *a,
 		}
 
 		return ret;
-	
+
 }
 
 static u16
@@ -3133,7 +3134,7 @@ u8 rtw_efuse_file_read(PADAPTER padapter
 	while ((j < len) && (i < count)) {
 		if (ptmpbuf[i] == '\0')
 			break;
-	
+
 		ptr = strpbrk(&ptmpbuf[i], " \t\n\r");
 		if (ptr) {
 			if (ptr == &ptmpbuf[i]) {
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/rtw_mlme.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/rtw_mlme.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/rtw_mlme.c
@@ -140,7 +140,7 @@ sint	_rtw_init_mlme_priv(_adapter *padap
 #if defined(CONFIG_RTW_WNM) || defined(CONFIG_RTW_80211K)
 	rtw_roam_nb_info_init(padapter);
 	pmlmepriv->ch_cnt = 0;
-#endif	
+#endif
 #endif
 	rtw_init_mlme_timer(padapter);
 
@@ -699,8 +699,8 @@ int is_same_network(WLAN_BSSID_EX *src,
 		return _TRUE;
 #endif
 
-	/* Wi-Fi driver doesn't consider the situation of BCN and ProbRsp sent from the same hidden AP, 
-	  * it considers these two packets are sent from different AP. 
+	/* Wi-Fi driver doesn't consider the situation of BCN and ProbRsp sent from the same hidden AP,
+	  * it considers these two packets are sent from different AP.
 	  * Therefore, the scan queue may store two scan results of the same hidden AP, likes below.
 	  *
 	  *  index            bssid              ch    RSSI   SdBm  Noise   age          flag             ssid
@@ -713,11 +713,11 @@ int is_same_network(WLAN_BSSID_EX *src,
 	  * It means the scan queue will not store two scan results of the same hidden AP, it only store ProbRsp.
 	  * For customer request.
 	  */
-	  
+
 	if (((_rtw_memcmp(src->MacAddress, dst->MacAddress, ETH_ALEN)) == _TRUE) &&
 		((s_cap & WLAN_CAPABILITY_IBSS) == (d_cap & WLAN_CAPABILITY_IBSS)) &&
 		((s_cap & WLAN_CAPABILITY_BSS) == (d_cap & WLAN_CAPABILITY_BSS))) {
-		if ((src->Ssid.SsidLength == dst->Ssid.SsidLength) && 
+		if ((src->Ssid.SsidLength == dst->Ssid.SsidLength) &&
 			(((_rtw_memcmp(src->Ssid.Ssid, dst->Ssid.Ssid, src->Ssid.SsidLength)) == _TRUE) || //Case of normal AP
 			(is_all_null(src->Ssid.Ssid, src->Ssid.SsidLength) == _TRUE || is_all_null(dst->Ssid.Ssid, dst->Ssid.SsidLength) == _TRUE))) //Case of hidden AP
 			return _TRUE;
@@ -994,7 +994,7 @@ bool rtw_update_scanned_network(_adapter
 			plist = get_next(plist);
 			continue;
 		}
-			
+
 #ifdef CONFIG_RSSI_PRIORITY
 		if ((choice == NULL) || (pnetwork->network.PhyInfo.SignalStrength < choice->network.PhyInfo.SignalStrength))
 			#ifdef CONFIG_RTW_MESH
@@ -2603,10 +2603,10 @@ u8 rtw_ft_chk_roaming_candidate(
 	/*The candidate don't support over-the-DS*/
 	if (rtw_ft_valid_otd_candidate(padapter, pmdie)) {
 		RTW_INFO("FT: ignore the candidate("
-			MAC_FMT ") for over-the-DS\n", 
+			MAC_FMT ") for over-the-DS\n",
 			MAC_ARG(competitor->network.MacAddress));
 			rtw_ft_clr_flags(padapter, RTW_FT_PEER_OTD_EN);
-		return _FALSE;	
+		return _FALSE;
 	}
 
 	return _TRUE;
@@ -2682,7 +2682,7 @@ err_2:
 void rtw_roam_nb_info_init(_adapter *padapter)
 {
 	struct roam_nb_info *pnb = &(padapter->mlmepriv.nb_info);
-	
+
 	_rtw_memset(&pnb->nb_rpt, 0, sizeof(pnb->nb_rpt));
 	_rtw_memset(&pnb->nb_rpt_ch_list, 0, sizeof(pnb->nb_rpt_ch_list));
 	_rtw_memset(&pnb->roam_target_addr, 0, ETH_ALEN);
@@ -2692,8 +2692,8 @@ void rtw_roam_nb_info_init(_adapter *pad
 	pnb->nb_rpt_is_same = _TRUE;
 	pnb->last_nb_rpt_entries = 0;
 #ifdef CONFIG_RTW_WNM
-	rtw_init_timer(&pnb->roam_scan_timer, 
-		padapter, rtw_wnm_roam_scan_hdl, 
+	rtw_init_timer(&pnb->roam_scan_timer,
+		padapter, rtw_wnm_roam_scan_hdl,
 		padapter);
 #endif
 }
@@ -2721,7 +2721,7 @@ u8 rtw_roam_nb_scan_list_set(
 	rtw_init_sitesurvey_parm(padapter, pparm);
 	if (rtw_roam_busy_scan(padapter, pnb)) {
 		pparm->ch_num = 1;
-		pparm->ch[pmlmepriv->ch_cnt].hw_value = 
+		pparm->ch[pmlmepriv->ch_cnt].hw_value =
 			pnb->nb_rpt_ch_list[pmlmepriv->ch_cnt].hw_value;
 		pmlmepriv->ch_cnt++;
 		ret = _TRUE;
@@ -2740,7 +2740,7 @@ u8 rtw_roam_nb_scan_list_set(
 	}
 
 	pmlmepriv->nb_info.nb_rpt_valid = _FALSE;
-	pmlmepriv->ch_cnt = 0;		
+	pmlmepriv->ch_cnt = 0;
 	ret = _TRUE;
 
 set_bssid_list:
@@ -3070,7 +3070,7 @@ void rtw_scan_timeout_handler(void *ctx)
 void rtw_mlme_reset_auto_scan_int(_adapter *adapter, u8 *reason)
 {
 #if defined(CONFIG_RTW_MESH) && defined(CONFIG_DFS_MASTER)
-#if CONFIG_RTW_MESH_OFFCH_CAND 
+#if CONFIG_RTW_MESH_OFFCH_CAND
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
 #endif
 #endif
@@ -3122,11 +3122,14 @@ void rtw_drv_scan_by_self(_adapter *pada
 	ssc_chk = rtw_sitesurvey_condition_check(padapter, _FALSE);
 	if( ssc_chk == SS_DENY_BUSY_TRAFFIC) {
 		#ifdef CONFIG_LAYER2_ROAMING
-		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE) && pmlmepriv->need_to_roam == _TRUE)
+		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE) && pmlmepriv->need_to_roam == _TRUE) {
 			RTW_INFO(FUNC_ADPT_FMT" need to roam, don't care BusyTraffic\n", FUNC_ADPT_ARG(padapter));
-		else
+		} else {
 		#endif
 			RTW_INFO(FUNC_ADPT_FMT" exit BusyTraffic\n", FUNC_ADPT_ARG(padapter));
+		#ifdef CONFIG_LAYER2_ROAMING
+		}
+		#endif
 			goto exit;
 	}
 	else if (ssc_chk != SS_ALLOW)
@@ -3184,7 +3187,7 @@ void rtw_drv_scan_by_self(_adapter *pada
 	}
 
 #if defined(CONFIG_RTW_WNM) || defined(CONFIG_RTW_80211K)
-	if ((reason == RTW_AUTO_SCAN_REASON_ROAM) 
+	if ((reason == RTW_AUTO_SCAN_REASON_ROAM)
 		&& (rtw_roam_nb_scan_list_set(padapter, &parm)))
 		goto exit;
 #endif
@@ -3414,7 +3417,7 @@ static void collect_traffic_statistics(_
 	dynamic_napi_th_chk (padapter);
 #endif /* CONFIG_RTW_NAPI_DYNAMIC */
 #endif
-	
+
 }
 
 void rtw_dynamic_check_timer_handlder(void *ctx)
@@ -3548,10 +3551,10 @@ static int rtw_check_roaming_candidate(s
 		goto exit;
 
 #if defined(CONFIG_RTW_80211R) && defined(CONFIG_RTW_WNM)
-	if (rtw_wnm_btm_diff_bss(adapter) && 
+	if (rtw_wnm_btm_diff_bss(adapter) &&
 		rtw_wnm_btm_roam_candidate(adapter, competitor)) {
 		goto update;
-	}	
+	}
 #endif
 
 	if (competitor->network.Rssi - mlme->cur_network_scanned->network.Rssi < mlme->roam_rssi_diff_th)
@@ -3995,9 +3998,9 @@ exit:
 /*
  * rtw_uapsd_use_default_setting
  * This function is used for setting default uapsd max sp length to uapsd_max_sp_len
- * in qos_priv data structure from registry. In additional, it will also map default uapsd 
- * ac to each uapsd TID, delivery-enabled and trigger-enabled of corresponding TID. 
- * 
+ * in qos_priv data structure from registry. In additional, it will also map default uapsd
+ * ac to each uapsd TID, delivery-enabled and trigger-enabled of corresponding TID.
+ *
  * Arguments:
  * @padapter: _adapter pointer.
  *
@@ -4012,7 +4015,7 @@ void	rtw_uapsd_use_default_setting(_adap
 
 	if (pregistrypriv->uapsd_ac_enable != 0) {
 		pqospriv->uapsd_max_sp_len = pregistrypriv->uapsd_max_sp_len;
-		
+
 		CLEAR_FLAGS(pqospriv->uapsd_tid);
 		CLEAR_FLAGS(pqospriv->uapsd_tid_delivery_enabled);
 		CLEAR_FLAGS(pqospriv->uapsd_tid_trigger_enabled);
@@ -4028,7 +4031,7 @@ void	rtw_uapsd_use_default_setting(_adap
 		}
 
 		/* check the uapsd setting of AC_VI from registry then map these setting to each TID if necessary  */
-		if(TEST_FLAG(pregistrypriv->uapsd_ac_enable, DRV_CFG_UAPSD_VI)) {	
+		if(TEST_FLAG(pregistrypriv->uapsd_ac_enable, DRV_CFG_UAPSD_VI)) {
 			SET_FLAG(pqospriv->uapsd_tid, WMM_TID5);
 			SET_FLAG(pqospriv->uapsd_tid_delivery_enabled, WMM_TID5);
 			SET_FLAG(pqospriv->uapsd_tid_trigger_enabled, WMM_TID5);
@@ -4057,7 +4060,7 @@ void	rtw_uapsd_use_default_setting(_adap
 			SET_FLAG(pqospriv->uapsd_tid_trigger_enabled, WMM_TID0);
 		}
 
-		RTW_INFO("[WMMPS] UAPSD MAX SP Len = 0x%02x, UAPSD TID enabled = 0x%02x\n", 
+		RTW_INFO("[WMMPS] UAPSD MAX SP Len = 0x%02x, UAPSD TID enabled = 0x%02x\n",
 			pqospriv->uapsd_max_sp_len, (u8)pqospriv->uapsd_tid);
 	}
 
@@ -4067,18 +4070,18 @@ void	rtw_uapsd_use_default_setting(_adap
  * rtw_is_wmmps_mode
  * This function is used for checking whether Driver and an AP support uapsd function or not.
  * If both of them support uapsd function, it will return true. Otherwise returns false.
- * 
+ *
  * Arguments:
  * @padapter: _adapter pointer.
  *
  * Auther: Arvin Liu
  * Date: 2017/06/12
  */
-bool rtw_is_wmmps_mode(_adapter *padapter) 
+bool rtw_is_wmmps_mode(_adapter *padapter)
 {
 	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
 	struct qos_priv	*pqospriv = &pmlmepriv->qospriv;
-		
+
 	if ((pqospriv->uapsd_ap_supported) && ((pqospriv->uapsd_tid & BIT_MASK_TID_TC)  != 0))
 		return _TRUE;
 
@@ -4121,16 +4124,16 @@ int rtw_restruct_wmm_ie(_adapter *adapte
 
 #ifdef CONFIG_WMMPS_STA
 			switch(pqospriv->uapsd_max_sp_len) {
-				case NO_LIMIT: 
+				case NO_LIMIT:
 					/* do nothing */
 					break;
-				case TWO_MSDU: 
+				case TWO_MSDU:
 					SET_FLAG(qos_info, BIT5);
 					break;
-				case FOUR_MSDU: 
+				case FOUR_MSDU:
 					SET_FLAG(qos_info, BIT6);
-					break;	
-				case SIX_MSDU: 
+					break;
+				case SIX_MSDU:
 					SET_FLAG(qos_info, BIT5);
 					SET_FLAG(qos_info, BIT6);
 					break;
@@ -4152,7 +4155,7 @@ int rtw_restruct_wmm_ie(_adapter *adapte
 			if((TEST_FLAG(pqospriv->uapsd_tid, WMM_TID3)) && (TEST_FLAG(pqospriv->uapsd_tid, WMM_TID0)))
 				SET_FLAG(qos_info, WMM_IE_UAPSD_BE);
 #endif /* CONFIG_WMMPS_STA */
-			
+
 			out_ie[initial_out_len + 8] = qos_info;
 
 			break;
@@ -4263,7 +4266,7 @@ int rtw_rsn_sync_pmkid(_adapter *adapter
 		+ 2 + 16 * info.pmkid_cnt
 		+ (info.gmcs ? 4 : 0)
 		;
-	
+
 	ie[1] = (u8)(ie_len - 2);
 
 exit:
@@ -4796,7 +4799,7 @@ void rtw_update_ht_cap(_adapter *padapte
 			phtpriv->ampdu_enable = _TRUE;
 		} else
 			phtpriv->ampdu_enable = _TRUE;
-	} 
+	}
 
 
 	/* check Max Rx A-MPDU Size */
@@ -5246,4 +5249,3 @@ void dump_arp_pkt(void *sel, u8 *da, u8
 	RTW_PRINT_SEL(sel, "tha="MAC_FMT", tpa="IP_FMT"\n"
 		, MAC_ARG(ARP_TARGET_MAC_ADDR(arp)), IP_ARG(ARP_TARGET_IP_ADDR(arp)));
 }
-
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/rtw_recv.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/rtw_recv.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/rtw_recv.c
@@ -3544,9 +3544,10 @@ int validate_mp_recv_frame(_adapter *ada
 			int i;
 			RTW_INFO("############ type:0x%02x subtype:0x%02x #################\n", type, subtype);
 
-			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8)
+			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8){
 				RTW_INFO("%02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X:\n", *(ptr + i),
 					*(ptr + i + 1), *(ptr + i + 2) , *(ptr + i + 3) , *(ptr + i + 4), *(ptr + i + 5), *(ptr + i + 6), *(ptr + i + 7));
+			}
 				RTW_INFO("#############################\n");
 				_rtw_memset(pmppriv->mplink_buf, '\0' , sizeof(pmppriv->mplink_buf));
 				_rtw_memcpy(pmppriv->mplink_buf, ptr, precv_frame->u.hdr.len);
@@ -4737,7 +4738,7 @@ void rx_query_phy_status(
 						precvframe->u.hdr.psta = psta;
 					rx_process_phy_info(padapter, precvframe);
 				}
-			} else 
+			} else
 #endif
 			{
 					if (psta)
@@ -4940,4 +4941,3 @@ void dump_rx_bh_tk(void *sel, struct rec
 	);
 }
 #endif /* DBG_RX_BH_TRACKING */
-
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/efuse/rtw_efuse.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/efuse/rtw_efuse.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/efuse/rtw_efuse.c
@@ -898,8 +898,9 @@ void rtw_efuse_analyze(PADAPTER	padapter
 	j = 0;
 
 	for (i = 0; i < mapLen; i++) {
-		if (i % 16 == 0)
+		if (i % 16 == 0){
 			RTW_PRINT_SEL(RTW_DBGDUMP, "0x%03x: ", i);
+		}
 			_RTW_PRINT_SEL(RTW_DBGDUMP, "%02X%s"
 				, pEfuseHal->fakeEfuseInitMap[i]
 				, ((i + 1) % 16 == 0) ? "\n" : (((i + 1) % 8 == 0) ? "	  " : " ")
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/efuse/rtw_efuse.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/efuse/rtw_efuse.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8188fu/core/efuse/rtw_efuse.c
@@ -815,8 +815,9 @@ void rtw_efuse_analyze(PADAPTER	padapter
 	j = 0;
 
 	for (i = 0; i < mapLen; i++) {
-		if (i % 16 == 0)
+		if (i % 16 == 0){
 			RTW_PRINT_SEL(RTW_DBGDUMP, "0x%03x: ", i);
+		}
 			_RTW_PRINT_SEL(RTW_DBGDUMP, "%02X%s"
 				, pEfuseHal->fakeEfuseInitMap[i]
 				, ((i + 1) % 16 == 0) ? "\n" : (((i + 1) % 8 == 0) ? "	  " : " ")
@@ -968,7 +969,7 @@ void EFUSE_GetEfuseDefinition(PADAPTER a
 			*(u16 *)out = (u16)v32;
 			return;
 
-		case TYPE_EFUSE_REAL_CONTENT_LEN:	
+		case TYPE_EFUSE_REAL_CONTENT_LEN:
 			rtw_halmac_get_physical_efuse_size(d, &v32);
 			*(u16 *)out = (u16)v32;
 			return;
@@ -1074,7 +1075,7 @@ u8 rtw_efuse_bt_access(PADAPTER adapter,
 
 		if (efuse) {
 			err = rtw_halmac_read_bt_physical_efuse_map(d, efuse, size);
-			
+
 			if (err == -1) {
 				RTW_ERR("%s: rtw_halmac_read_bt_physical_efuse_map fail!\n", __FUNCTION__);
 				rtw_mfree(efuse, size);
@@ -1348,7 +1349,7 @@ void hal_ReadEFuse_BT_logic_map(
 
 	if (rtw_efuse_bt_access(padapter, _FALSE, 0, EFUSE_BT_REAL_CONTENT_LEN, phyefuse))
 		dump_buf(phyefuse, EFUSE_BT_REAL_BANK_CONTENT_LEN);
-	
+
 	total = BANK_NUM;
 	for (bank = 1; bank <= total; bank++) { /* 8723d Max bake 0~2 */
 		eFuse_Addr = 0;
@@ -1511,7 +1512,7 @@ static u8 hal_EfusePgPacketWrite2ByteHea
 	/*	RTW_INFO("%s: pg_header=0x%x\n", __FUNCTION__, pg_header); */
 
 	do {
-		
+
 		rtw_efuse_bt_access(padapter, _TRUE, efuse_addr, 1, &pg_header);
 		rtw_efuse_bt_access(padapter, _FALSE, efuse_addr, 1, &tmp_header);
 
@@ -1719,7 +1720,7 @@ u8 efuse_OneByteRead(struct _ADAPTER *a,
 		}
 
 		return ret;
-	
+
 }
 
 static u16
@@ -3132,7 +3133,7 @@ u8 rtw_efuse_file_read(PADAPTER padapter
 	while ((j < len) && (i < count)) {
 		if (ptmpbuf[i] == '\0')
 			break;
-	
+
 		ptr = strpbrk(&ptmpbuf[i], " \t\n\r");
 		if (ptr) {
 			if (ptr == &ptmpbuf[i]) {
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/rtw_mlme.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/rtw_mlme.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/rtw_mlme.c
@@ -139,7 +139,7 @@ sint	_rtw_init_mlme_priv(_adapter *padap
 #if defined(CONFIG_RTW_WNM) || defined(CONFIG_RTW_80211K)
 	rtw_roam_nb_info_init(padapter);
 	pmlmepriv->ch_cnt = 0;
-#endif	
+#endif
 #endif
 	rtw_init_mlme_timer(padapter);
 
@@ -698,8 +698,8 @@ int is_same_network(WLAN_BSSID_EX *src,
 		return _TRUE;
 #endif
 
-	/* Wi-Fi driver doesn't consider the situation of BCN and ProbRsp sent from the same hidden AP, 
-	  * it considers these two packets are sent from different AP. 
+	/* Wi-Fi driver doesn't consider the situation of BCN and ProbRsp sent from the same hidden AP,
+	  * it considers these two packets are sent from different AP.
 	  * Therefore, the scan queue may store two scan results of the same hidden AP, likes below.
 	  *
 	  *  index            bssid              ch    RSSI   SdBm  Noise   age          flag             ssid
@@ -712,11 +712,11 @@ int is_same_network(WLAN_BSSID_EX *src,
 	  * It means the scan queue will not store two scan results of the same hidden AP, it only store ProbRsp.
 	  * For customer request.
 	  */
-	  
+
 	if (((_rtw_memcmp(src->MacAddress, dst->MacAddress, ETH_ALEN)) == _TRUE) &&
 		((s_cap & WLAN_CAPABILITY_IBSS) == (d_cap & WLAN_CAPABILITY_IBSS)) &&
 		((s_cap & WLAN_CAPABILITY_BSS) == (d_cap & WLAN_CAPABILITY_BSS))) {
-		if ((src->Ssid.SsidLength == dst->Ssid.SsidLength) && 
+		if ((src->Ssid.SsidLength == dst->Ssid.SsidLength) &&
 			(((_rtw_memcmp(src->Ssid.Ssid, dst->Ssid.Ssid, src->Ssid.SsidLength)) == _TRUE) || //Case of normal AP
 			(is_all_null(src->Ssid.Ssid, src->Ssid.SsidLength) == _TRUE || is_all_null(dst->Ssid.Ssid, dst->Ssid.SsidLength) == _TRUE))) //Case of hidden AP
 			return _TRUE;
@@ -993,7 +993,7 @@ bool rtw_update_scanned_network(_adapter
 			plist = get_next(plist);
 			continue;
 		}
-			
+
 #ifdef CONFIG_RSSI_PRIORITY
 		if ((choice == NULL) || (pnetwork->network.PhyInfo.SignalStrength < choice->network.PhyInfo.SignalStrength))
 			#ifdef CONFIG_RTW_MESH
@@ -2616,10 +2616,10 @@ u8 rtw_ft_chk_roaming_candidate(
 	/*The candidate don't support over-the-DS*/
 	if (rtw_ft_valid_otd_candidate(padapter, pmdie)) {
 		RTW_INFO("FT: ignore the candidate("
-			MAC_FMT ") for over-the-DS\n", 
+			MAC_FMT ") for over-the-DS\n",
 			MAC_ARG(competitor->network.MacAddress));
 			rtw_ft_clr_flags(padapter, RTW_FT_PEER_OTD_EN);
-		return _FALSE;	
+		return _FALSE;
 	}
 
 	return _TRUE;
@@ -2695,7 +2695,7 @@ err_2:
 void rtw_roam_nb_info_init(_adapter *padapter)
 {
 	struct roam_nb_info *pnb = &(padapter->mlmepriv.nb_info);
-	
+
 	_rtw_memset(&pnb->nb_rpt, 0, sizeof(pnb->nb_rpt));
 	_rtw_memset(&pnb->nb_rpt_ch_list, 0, sizeof(pnb->nb_rpt_ch_list));
 	_rtw_memset(&pnb->roam_target_addr, 0, ETH_ALEN);
@@ -2705,8 +2705,8 @@ void rtw_roam_nb_info_init(_adapter *pad
 	pnb->nb_rpt_is_same = _TRUE;
 	pnb->last_nb_rpt_entries = 0;
 #ifdef CONFIG_RTW_WNM
-	rtw_init_timer(&pnb->roam_scan_timer, 
-		padapter, rtw_wnm_roam_scan_hdl, 
+	rtw_init_timer(&pnb->roam_scan_timer,
+		padapter, rtw_wnm_roam_scan_hdl,
 		padapter);
 #endif
 }
@@ -2734,7 +2734,7 @@ u8 rtw_roam_nb_scan_list_set(
 	rtw_init_sitesurvey_parm(padapter, pparm);
 	if (rtw_roam_busy_scan(padapter, pnb)) {
 		pparm->ch_num = 1;
-		pparm->ch[pmlmepriv->ch_cnt].hw_value = 
+		pparm->ch[pmlmepriv->ch_cnt].hw_value =
 			pnb->nb_rpt_ch_list[pmlmepriv->ch_cnt].hw_value;
 		pmlmepriv->ch_cnt++;
 		ret = _TRUE;
@@ -2753,7 +2753,7 @@ u8 rtw_roam_nb_scan_list_set(
 	}
 
 	pmlmepriv->nb_info.nb_rpt_valid = _FALSE;
-	pmlmepriv->ch_cnt = 0;		
+	pmlmepriv->ch_cnt = 0;
 	ret = _TRUE;
 
 set_bssid_list:
@@ -3082,7 +3082,7 @@ void rtw_scan_timeout_handler(void *ctx)
 void rtw_mlme_reset_auto_scan_int(_adapter *adapter, u8 *reason)
 {
 #if defined(CONFIG_RTW_MESH) && defined(CONFIG_DFS_MASTER)
-#if CONFIG_RTW_MESH_OFFCH_CAND 
+#if CONFIG_RTW_MESH_OFFCH_CAND
 	struct rf_ctl_t *rfctl = adapter_to_rfctl(adapter);
 #endif
 #endif
@@ -3134,11 +3134,14 @@ void rtw_drv_scan_by_self(_adapter *pada
 	ssc_chk = rtw_sitesurvey_condition_check(padapter, _FALSE);
 	if( ssc_chk == SS_DENY_BUSY_TRAFFIC) {
 		#ifdef CONFIG_LAYER2_ROAMING
-		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE) && pmlmepriv->need_to_roam == _TRUE)
+		if (rtw_chk_roam_flags(padapter, RTW_ROAM_ACTIVE) && pmlmepriv->need_to_roam == _TRUE) {
 			RTW_INFO(FUNC_ADPT_FMT" need to roam, don't care BusyTraffic\n", FUNC_ADPT_ARG(padapter));
-		else
+		} else {
 		#endif
 			RTW_INFO(FUNC_ADPT_FMT" exit BusyTraffic\n", FUNC_ADPT_ARG(padapter));
+		#ifdef CONFIG_LAYER2_ROAMING
+		}
+		#endif
 			goto exit;
 	}
 	else if (ssc_chk != SS_ALLOW)
@@ -3196,7 +3199,7 @@ void rtw_drv_scan_by_self(_adapter *pada
 	}
 
 #if defined(CONFIG_RTW_WNM) || defined(CONFIG_RTW_80211K)
-	if ((reason == RTW_AUTO_SCAN_REASON_ROAM) 
+	if ((reason == RTW_AUTO_SCAN_REASON_ROAM)
 		&& (rtw_roam_nb_scan_list_set(padapter, &parm)))
 		goto exit;
 #endif
@@ -3426,7 +3429,7 @@ static void collect_traffic_statistics(_
 	dynamic_napi_th_chk (padapter);
 #endif /* CONFIG_RTW_NAPI_DYNAMIC */
 #endif
-	
+
 }
 
 void rtw_dynamic_check_timer_handlder(void *ctx)
@@ -3560,10 +3563,10 @@ static int rtw_check_roaming_candidate(s
 		goto exit;
 
 #if defined(CONFIG_RTW_80211R) && defined(CONFIG_RTW_WNM)
-	if (rtw_wnm_btm_diff_bss(adapter) && 
+	if (rtw_wnm_btm_diff_bss(adapter) &&
 		rtw_wnm_btm_roam_candidate(adapter, competitor)) {
 		goto update;
-	}	
+	}
 #endif
 
 	if (competitor->network.Rssi - mlme->cur_network_scanned->network.Rssi < mlme->roam_rssi_diff_th)
@@ -4007,9 +4010,9 @@ exit:
 /*
  * rtw_uapsd_use_default_setting
  * This function is used for setting default uapsd max sp length to uapsd_max_sp_len
- * in qos_priv data structure from registry. In additional, it will also map default uapsd 
- * ac to each uapsd TID, delivery-enabled and trigger-enabled of corresponding TID. 
- * 
+ * in qos_priv data structure from registry. In additional, it will also map default uapsd
+ * ac to each uapsd TID, delivery-enabled and trigger-enabled of corresponding TID.
+ *
  * Arguments:
  * @padapter: _adapter pointer.
  *
@@ -4024,7 +4027,7 @@ void	rtw_uapsd_use_default_setting(_adap
 
 	if (pregistrypriv->uapsd_ac_enable != 0) {
 		pqospriv->uapsd_max_sp_len = pregistrypriv->uapsd_max_sp_len;
-		
+
 		CLEAR_FLAGS(pqospriv->uapsd_tid);
 		CLEAR_FLAGS(pqospriv->uapsd_tid_delivery_enabled);
 		CLEAR_FLAGS(pqospriv->uapsd_tid_trigger_enabled);
@@ -4040,7 +4043,7 @@ void	rtw_uapsd_use_default_setting(_adap
 		}
 
 		/* check the uapsd setting of AC_VI from registry then map these setting to each TID if necessary  */
-		if(TEST_FLAG(pregistrypriv->uapsd_ac_enable, DRV_CFG_UAPSD_VI)) {	
+		if(TEST_FLAG(pregistrypriv->uapsd_ac_enable, DRV_CFG_UAPSD_VI)) {
 			SET_FLAG(pqospriv->uapsd_tid, WMM_TID5);
 			SET_FLAG(pqospriv->uapsd_tid_delivery_enabled, WMM_TID5);
 			SET_FLAG(pqospriv->uapsd_tid_trigger_enabled, WMM_TID5);
@@ -4069,7 +4072,7 @@ void	rtw_uapsd_use_default_setting(_adap
 			SET_FLAG(pqospriv->uapsd_tid_trigger_enabled, WMM_TID0);
 		}
 
-		RTW_INFO("[WMMPS] UAPSD MAX SP Len = 0x%02x, UAPSD TID enabled = 0x%02x\n", 
+		RTW_INFO("[WMMPS] UAPSD MAX SP Len = 0x%02x, UAPSD TID enabled = 0x%02x\n",
 			pqospriv->uapsd_max_sp_len, (u8)pqospriv->uapsd_tid);
 	}
 
@@ -4079,18 +4082,18 @@ void	rtw_uapsd_use_default_setting(_adap
  * rtw_is_wmmps_mode
  * This function is used for checking whether Driver and an AP support uapsd function or not.
  * If both of them support uapsd function, it will return true. Otherwise returns false.
- * 
+ *
  * Arguments:
  * @padapter: _adapter pointer.
  *
  * Auther: Arvin Liu
  * Date: 2017/06/12
  */
-bool rtw_is_wmmps_mode(_adapter *padapter) 
+bool rtw_is_wmmps_mode(_adapter *padapter)
 {
 	struct mlme_priv	*pmlmepriv = &(padapter->mlmepriv);
 	struct qos_priv	*pqospriv = &pmlmepriv->qospriv;
-		
+
 	if ((pqospriv->uapsd_ap_supported) && ((pqospriv->uapsd_tid & BIT_MASK_TID_TC)  != 0))
 		return _TRUE;
 
@@ -4133,16 +4136,16 @@ int rtw_restruct_wmm_ie(_adapter *adapte
 
 #ifdef CONFIG_WMMPS_STA
 			switch(pqospriv->uapsd_max_sp_len) {
-				case NO_LIMIT: 
+				case NO_LIMIT:
 					/* do nothing */
 					break;
-				case TWO_MSDU: 
+				case TWO_MSDU:
 					SET_FLAG(qos_info, BIT5);
 					break;
-				case FOUR_MSDU: 
+				case FOUR_MSDU:
 					SET_FLAG(qos_info, BIT6);
-					break;	
-				case SIX_MSDU: 
+					break;
+				case SIX_MSDU:
 					SET_FLAG(qos_info, BIT5);
 					SET_FLAG(qos_info, BIT6);
 					break;
@@ -4164,7 +4167,7 @@ int rtw_restruct_wmm_ie(_adapter *adapte
 			if((TEST_FLAG(pqospriv->uapsd_tid, WMM_TID3)) && (TEST_FLAG(pqospriv->uapsd_tid, WMM_TID0)))
 				SET_FLAG(qos_info, WMM_IE_UAPSD_BE);
 #endif /* CONFIG_WMMPS_STA */
-			
+
 			out_ie[initial_out_len + 8] = qos_info;
 
 			break;
@@ -4275,7 +4278,7 @@ int rtw_rsn_sync_pmkid(_adapter *adapter
 		+ 2 + 16 * info.pmkid_cnt
 		+ (info.gmcs ? 4 : 0)
 		;
-	
+
 	ie[1] = (u8)(ie_len - 2);
 
 exit:
@@ -4817,7 +4820,7 @@ void rtw_update_ht_cap(_adapter *padapte
 			phtpriv->ampdu_enable = _TRUE;
 		} else
 			phtpriv->ampdu_enable = _TRUE;
-	} 
+	}
 
 
 	/* check Max Rx A-MPDU Size */
@@ -4904,7 +4907,7 @@ void rtw_update_ht_cap(_adapter *padapte
 		default:
 			pmlmeext->cur_bwmode = CHANNEL_WIDTH_20;
 			pmlmeext->cur_ch_offset = HAL_PRIME_CHNL_OFFSET_DONT_CARE;
-			RTW_INFO("%s : ch offset is not assigned for HT40 mod , update cur_bwmode=%u, cur_ch_offset=%u\n", 
+			RTW_INFO("%s : ch offset is not assigned for HT40 mod , update cur_bwmode=%u, cur_ch_offset=%u\n",
 					__func__, pmlmeext->cur_bwmode, pmlmeext->cur_ch_offset);
 			break;
 		}
@@ -5289,4 +5292,3 @@ void dump_arp_pkt(void *sel, u8 *da, u8
 	RTW_PRINT_SEL(sel, "tha="MAC_FMT", tpa="IP_FMT"\n"
 		, MAC_ARG(ARP_TARGET_MAC_ADDR(arp)), IP_ARG(ARP_TARGET_IP_ADDR(arp)));
 }
-
Index: linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/rtw_recv.c
===================================================================
--- linux-bac1feba87f09330afbd2083038319efd75642f8.orig/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/rtw_recv.c
+++ linux-bac1feba87f09330afbd2083038319efd75642f8/drivers/net/wireless/rockchip_wlan/rtl8822ce/core/rtw_recv.c
@@ -3555,9 +3555,10 @@ int validate_mp_recv_frame(_adapter *ada
 			int i;
 			RTW_INFO("############ type:0x%02x subtype:0x%02x #################\n", type, subtype);
 
-			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8)
+			for (i = 0; i < precv_frame->u.hdr.len; i = i + 8){
 				RTW_INFO("%02X:%02X:%02X:%02X:%02X:%02X:%02X:%02X:\n", *(ptr + i),
 					*(ptr + i + 1), *(ptr + i + 2) , *(ptr + i + 3) , *(ptr + i + 4), *(ptr + i + 5), *(ptr + i + 6), *(ptr + i + 7));
+			}
 				RTW_INFO("#############################\n");
 				_rtw_memset(pmppriv->mplink_buf, '\0' , sizeof(pmppriv->mplink_buf));
 				_rtw_memcpy(pmppriv->mplink_buf, ptr, precv_frame->u.hdr.len);
@@ -4748,7 +4749,7 @@ void rx_query_phy_status(
 						precvframe->u.hdr.psta = psta;
 					rx_process_phy_info(padapter, precvframe);
 				}
-			} else 
+			} else
 #endif
 			{
 					if (psta)
@@ -4951,4 +4952,3 @@ void dump_rx_bh_tk(void *sel, struct rec
 	);
 }
 #endif /* DBG_RX_BH_TRACKING */
-
